//
// BuiltCampaignResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct BuiltCampaignResponse: Codable {

    public enum State: String, Codable { 
        case notLaunched = "NOT_LAUNCHED"
        case live = "LIVE"
        case paused = "PAUSED"
        case ended = "ENDED"
        case stopped = "STOPPED"
    }
    public enum CampaignLocks: String, Codable { 
        case duplicate = "DUPLICATE"
        case edit = "EDIT"
    }
    public var campaignId: String?
    public var name: String?
    public var _description: String?
    public var steps: [BuiltCampaignStepResponse]?
    public var incentiveId: String?
    public var updatedDate: Date?
    public var lastPublishedDate: Date?
    public var isPublished: Bool?
    public var state: State?
    public var components: [CampaignComponentResponse]?
    public var controllers: [BuiltCampaignControllerResponse]?
    public var labels: [CampaignLabelResponse]?
    public var programLabel: String?
    public var incentive: IncentiveResponse?
    public var version: Int?
    public var parentVersion: Int?
    public var programType: String?
    public var themeName: String?
    public var flowSteps: [BuiltCampaignFlowStepResponse]?
    public var campaignLocks: [CampaignLocks]?

    public init(campaignId: String? = nil, name: String? = nil, _description: String? = nil, steps: [BuiltCampaignStepResponse]? = nil, incentiveId: String? = nil, updatedDate: Date? = nil, lastPublishedDate: Date? = nil, isPublished: Bool? = nil, state: State? = nil, components: [CampaignComponentResponse]? = nil, controllers: [BuiltCampaignControllerResponse]? = nil, labels: [CampaignLabelResponse]? = nil, programLabel: String? = nil, incentive: IncentiveResponse? = nil, version: Int? = nil, parentVersion: Int? = nil, programType: String? = nil, themeName: String? = nil, flowSteps: [BuiltCampaignFlowStepResponse]? = nil, campaignLocks: [CampaignLocks]? = nil) {
        self.campaignId = campaignId
        self.name = name
        self._description = _description
        self.steps = steps
        self.incentiveId = incentiveId
        self.updatedDate = updatedDate
        self.lastPublishedDate = lastPublishedDate
        self.isPublished = isPublished
        self.state = state
        self.components = components
        self.controllers = controllers
        self.labels = labels
        self.programLabel = programLabel
        self.incentive = incentive
        self.version = version
        self.parentVersion = parentVersion
        self.programType = programType
        self.themeName = themeName
        self.flowSteps = flowSteps
        self.campaignLocks = campaignLocks
    }

    public enum CodingKeys: String, CodingKey { 
        case campaignId = "campaign_id"
        case name
        case _description = "description"
        case steps
        case incentiveId = "incentive_id"
        case updatedDate = "updated_date"
        case lastPublishedDate = "last_published_date"
        case isPublished = "is_published"
        case state
        case components
        case controllers
        case labels
        case programLabel = "program_label"
        case incentive
        case version
        case parentVersion = "parent_version"
        case programType = "program_type"
        case themeName = "theme_name"
        case flowSteps = "flow_steps"
        case campaignLocks = "campaign_locks"
    }

}
