//
// V6subscriptionsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class V6subscriptionsAPI {
    /**
     Gets subscriptions for a client

     - parameter havingAnyTags: (query)  (optional)
     - parameter havingAllTags: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func listSubscriptions(havingAnyTags: String? = nil, havingAllTags: String? = nil, completion: @escaping ((_ data: [SubscriptionResponse]?,_ error: Error?) -> Void)) {
        listSubscriptionsWithRequestBuilder(havingAnyTags: havingAnyTags, havingAllTags: havingAllTags).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Gets subscriptions for a client
     - GET /v6/subscriptions
     - 

     - API Key:
       - type: apiKey access_token (QUERY)
       - name: COOKIE
     - API Key:
       - type: apiKey authorization 
       - name: HEADER
     - API Key:
       - type: apiKey access_token (QUERY)
       - name: QUERY
     - examples: [{contentType=application/json, example=[ {
  "subscription_id" : "subscription_id",
  "filtering_level" : "ALL",
  "channels" : [ {
    "id" : "id",
    "type" : "SLACK"
  }, {
    "id" : "id",
    "type" : "SLACK"
  } ],
  "having_all_tags" : [ "having_all_tags", "having_all_tags" ],
  "user" : {
    "user_id" : "user_id",
    "last_name" : "last_name",
    "first_name" : "first_name",
    "email" : "email"
  }
}, {
  "subscription_id" : "subscription_id",
  "filtering_level" : "ALL",
  "channels" : [ {
    "id" : "id",
    "type" : "SLACK"
  }, {
    "id" : "id",
    "type" : "SLACK"
  } ],
  "having_all_tags" : [ "having_all_tags", "having_all_tags" ],
  "user" : {
    "user_id" : "user_id",
    "last_name" : "last_name",
    "first_name" : "first_name",
    "email" : "email"
  }
} ]}]
     - parameter havingAnyTags: (query)  (optional)
     - parameter havingAllTags: (query)  (optional)

     - returns: RequestBuilder<[SubscriptionResponse]> 
     */
    open class func listSubscriptionsWithRequestBuilder(havingAnyTags: String? = nil, havingAllTags: String? = nil) -> RequestBuilder<[SubscriptionResponse]> {
        let path = "/v6/subscriptions"
        let URLString = ExtoleClientAPIAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "having_any_tags": havingAnyTags, 
                        "having_all_tags": havingAllTags
        ])


        let requestBuilder: RequestBuilder<[SubscriptionResponse]>.Type = ExtoleClientAPIAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
