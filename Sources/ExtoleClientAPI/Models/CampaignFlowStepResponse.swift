//
// CampaignFlowStepResponse.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct CampaignFlowStepResponse: Codable {

    public var flowStepId: String?
    public var flowPath: BuildtimeEvaluatableCampaignBuildtimeContextString?
    public var sequence: BuildtimeEvaluatableCampaignBuildtimeContextBigDecimal?
    public var stepName: BuildtimeEvaluatableCampaignBuildtimeContextString?
    public var iconType: String?
    public var metrics: [CampaignFlowStepMetricResponse]?
    public var apps: [CampaignFlowStepAppResponse]?
    public var tags: [String]?
    public var name: BuildtimeEvaluatableCampaignBuildtimeContextString?
    public var iconColor: BuildtimeEvaluatableCampaignBuildtimeContextString?
    public var componentReferences: [CampaignComponentReferenceResponse]?

    public init(flowStepId: String? = nil, flowPath: BuildtimeEvaluatableCampaignBuildtimeContextString? = nil, sequence: BuildtimeEvaluatableCampaignBuildtimeContextBigDecimal? = nil, stepName: BuildtimeEvaluatableCampaignBuildtimeContextString? = nil, iconType: String? = nil, metrics: [CampaignFlowStepMetricResponse]? = nil, apps: [CampaignFlowStepAppResponse]? = nil, tags: [String]? = nil, name: BuildtimeEvaluatableCampaignBuildtimeContextString? = nil, iconColor: BuildtimeEvaluatableCampaignBuildtimeContextString? = nil, componentReferences: [CampaignComponentReferenceResponse]? = nil) {
        self.flowStepId = flowStepId
        self.flowPath = flowPath
        self.sequence = sequence
        self.stepName = stepName
        self.iconType = iconType
        self.metrics = metrics
        self.apps = apps
        self.tags = tags
        self.name = name
        self.iconColor = iconColor
        self.componentReferences = componentReferences
    }

    public enum CodingKeys: String, CodingKey { 
        case flowStepId = "flow_step_id"
        case flowPath = "flow_path"
        case sequence
        case stepName = "step_name"
        case iconType = "icon_type"
        case metrics
        case apps
        case tags
        case name
        case iconColor = "icon_color"
        case componentReferences = "component_references"
    }

}
