//
// JavaType.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public class JavaType: Codable {

    public var bindings: TypeBindings?
    public var superClass: JavaType?
    public var contentValueHandler: String?
    public var contentTypeHandler: String?
    public var recordType: Bool?
    public var enumImplType: Bool?
    public var referencedType: JavaType?
    public var containerType: Bool?
    public var arrayType: Bool?
    public var javaLangObject: Bool?
    public var collectionLikeType: Bool?
    public var mapLikeType: Bool?
    public var concrete: Bool?
    public var throwable: Bool?
    public var valueHandler: String?
    public var typeHandler: String?
    public var erasedSignature: String?
    public var keyType: JavaType?
    public var enumType: Bool?
    public var contentType: JavaType?
    public var interface: Bool?
    public var primitive: Bool?
    public var interfaces: [JavaType]?
    public var abstract: Bool?
    public var genericSignature: String?
    public var _final: Bool?
    public var typeName: String?
    public var referenceType: Bool?

    public init(bindings: TypeBindings? = nil, superClass: JavaType? = nil, contentValueHandler: String? = nil, contentTypeHandler: String? = nil, recordType: Bool? = nil, enumImplType: Bool? = nil, referencedType: JavaType? = nil, containerType: Bool? = nil, arrayType: Bool? = nil, javaLangObject: Bool? = nil, collectionLikeType: Bool? = nil, mapLikeType: Bool? = nil, concrete: Bool? = nil, throwable: Bool? = nil, valueHandler: String? = nil, typeHandler: String? = nil, erasedSignature: String? = nil, keyType: JavaType? = nil, enumType: Bool? = nil, contentType: JavaType? = nil, interface: Bool? = nil, primitive: Bool? = nil, interfaces: [JavaType]? = nil, abstract: Bool? = nil, genericSignature: String? = nil, _final: Bool? = nil, typeName: String? = nil, referenceType: Bool? = nil) {
        self.bindings = bindings
        self.superClass = superClass
        self.contentValueHandler = contentValueHandler
        self.contentTypeHandler = contentTypeHandler
        self.recordType = recordType
        self.enumImplType = enumImplType
        self.referencedType = referencedType
        self.containerType = containerType
        self.arrayType = arrayType
        self.javaLangObject = javaLangObject
        self.collectionLikeType = collectionLikeType
        self.mapLikeType = mapLikeType
        self.concrete = concrete
        self.throwable = throwable
        self.valueHandler = valueHandler
        self.typeHandler = typeHandler
        self.erasedSignature = erasedSignature
        self.keyType = keyType
        self.enumType = enumType
        self.contentType = contentType
        self.interface = interface
        self.primitive = primitive
        self.interfaces = interfaces
        self.abstract = abstract
        self.genericSignature = genericSignature
        self._final = _final
        self.typeName = typeName
        self.referenceType = referenceType
    }

    public enum CodingKeys: String, CodingKey { 
        case bindings
        case superClass
        case contentValueHandler
        case contentTypeHandler
        case recordType
        case enumImplType
        case referencedType
        case containerType
        case arrayType
        case javaLangObject
        case collectionLikeType
        case mapLikeType
        case concrete
        case throwable
        case valueHandler
        case typeHandler
        case erasedSignature
        case keyType
        case enumType
        case contentType
        case interface
        case primitive
        case interfaces
        case abstract
        case genericSignature
        case _final = "final"
        case typeName
        case referenceType
    }

}
